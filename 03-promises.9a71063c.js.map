{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMO,EAAOC,SAASC,cAAc,SAYpCF,EAAKG,iBAAiB,SAItB,SAAqBC,GACJ,IAAIC,SAASL,GACrBM,SAAQ,SAACC,EAAOC,GACvBC,EAAYD,GAAOD,C,OALrB,IAAME,EAAc,GAUpBT,EAAKG,iBAAiB,UAEtB,SAAsBC,GACtBA,EAAEM,iBAIA,IAHF,IAAOC,EAAmCF,EAAnChB,MAAmBmB,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAGrBC,EAAW,EAAGA,EAAWC,OAAOF,GAASC,GAAY,EAAG,CAE/D,IAAME,EAAQD,OAAOJ,GAAaG,EAAWC,OAAOH,GAEpDrB,EAAcuB,EAAUE,GACvBC,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,QAAQC,IAAI,uBAA4CC,OAAnB7B,EAAW,EAAE,QAAY6B,OAAN5B,EAAM,M,IAE/D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,QAAQC,IAAI,sBAAyCC,OAAnB7B,EAAW,EAAE,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    });\n}\n// console.log(createPromise(1, 1000));\nconst form = document.querySelector('.form');\n// const initDelayField = document.querySelector('input[name=\"delay\"]');\n// const stepField = document.querySelector('input[name=\"step\"]');\n// const amountField = document.querySelector('input[name=\"amount\"]');\n// const createPromisesBtn = document.querySelector('button[type=\"submit\"]');\n\n// console.log(form, initDelayField, stepField, amountField, createPromisesBtn);\n\n// const amount = amountField.value;\n// const initDelay = initDelayField.value;\n// const step = stepField.value;\n\nform.addEventListener('input', onFormInput);\n\nconst userOptions = {};\n\nfunction onFormInput(e) {\nconst formData = new FormData(form);\nformData.forEach((value, key) => {\n  userOptions[key] = value;\n});\n// console.log(userOptions);\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\ne.preventDefault();\nconst {delay : initDelay, step, amount} = userOptions;\n// console.log(initDelay, step, amount);\n\n  for (let position = 0; position < Number(amount); position += 1) {\n    // console.log(position);\n    const delay = Number(initDelay) + position * Number(step);\n    // console.log(delay);\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n    });\n  }\n}\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","FormData","forEach","value","key","$ce04d3a99e08e73b$var$userOptions","preventDefault","initDelay","step","amount","position1","Number","delay1","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.9a71063c.js.map"}