{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMO,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,SAItB,SAAqBC,GACJ,IAAIC,SAASL,GACrBM,SAAQ,SAACC,EAAOC,GACvBC,EAAYD,GAAOD,C,OALrB,IAAME,EAAc,GASpBT,EAAKG,iBAAiB,UAEtB,SAAsBC,GACtBA,EAAEM,iBAGA,IAFF,IAAOC,EAAmCF,EAAnChB,MAAmBmB,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAErBC,EAAW,EAAGA,EAAWC,OAAOF,GAASC,GAAY,EAAG,CAC/D,IAAME,EAAQD,OAAOJ,GAAaG,EAAWC,OAAOH,GACpDrB,EAAcuB,EAAUE,GACvBC,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAEjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAA4CC,OAAnB9B,EAAW,EAAE,QAAY8B,OAAN7B,EAAM,M,IAE3E8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAElB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAyCF,OAAnB9B,EAAW,EAAE,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('input', onFormInput);\n\nconst userOptions = {};\n\nfunction onFormInput(e) {\nconst formData = new FormData(form);\nformData.forEach((value, key) => {\n  userOptions[key] = value;\n});\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\ne.preventDefault();\nconst {delay : initDelay, step, amount} = userOptions;\n\n  for (let position = 0; position < Number(amount); position += 1) {\n    const delay = Number(initDelay) + position * Number(step);\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      // console.log(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      // console.log(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n    });\n  }\n}\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","FormData","forEach","value","key","$ce04d3a99e08e73b$var$userOptions","preventDefault","initDelay","step","amount","position1","Number","delay1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.12c5f3c5.js.map"}