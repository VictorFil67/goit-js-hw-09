{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMO,EAAOC,SAASC,cAAc,SAYpCF,EAAKG,iBAAiB,SAItB,SAAqBC,GACJ,IAAIC,SAASL,GACrBM,SAAQ,CAACC,EAAOC,KACvBC,EAAYD,GAAOD,CAAK,G,IAL1B,MAAME,EAAc,GAUpBT,EAAKG,iBAAiB,UAEtB,SAAsBC,GACtBA,EAAEM,iBACF,MAAOjB,MAAQkB,EAASC,KAAEA,EAAIC,OAAEA,GAAUJ,EAGxC,IAAK,IAAIK,EAAW,EAAGA,EAAWC,OAAOF,GAASC,GAAY,EAAG,CAE/D,MAAME,EAAQD,OAAOJ,GAAaG,EAAWC,OAAOH,GAEpDrB,EAAcuB,EAAUE,GACvBC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,QAAQC,IAAI,uBAAqB3B,EAAY,QAASC,MAAU,IAEjE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClByB,QAAQC,IAAI,sBAAoB3B,EAAU,QAASC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    });\n}\n// console.log(createPromise(1, 1000));\nconst form = document.querySelector('.form');\n// const initDelayField = document.querySelector('input[name=\"delay\"]');\n// const stepField = document.querySelector('input[name=\"step\"]');\n// const amountField = document.querySelector('input[name=\"amount\"]');\n// const createPromisesBtn = document.querySelector('button[type=\"submit\"]');\n\n// console.log(form, initDelayField, stepField, amountField, createPromisesBtn);\n\n// const amount = amountField.value;\n// const initDelay = initDelayField.value;\n// const step = stepField.value;\n\nform.addEventListener('input', onFormInput);\n\nconst userOptions = {};\n\nfunction onFormInput(e) {\nconst formData = new FormData(form);\nformData.forEach((value, key) => {\n  userOptions[key] = value;\n});\n// console.log(userOptions);\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\ne.preventDefault();\nconst {delay : initDelay, step, amount} = userOptions;\n// console.log(initDelay, step, amount);\n\n  for (let position = 0; position < Number(amount); position += 1) {\n    // console.log(position);\n    const delay = Number(initDelay) + position * Number(step);\n    // console.log(delay);\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n    });\n  }\n}\n\n\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","FormData","forEach","value","key","$47d4ff9957288465$var$userOptions","preventDefault","initDelay","step","amount","position1","Number","delay1","then","console","log","catch"],"version":3,"file":"03-promises.4fa2e0a8.js.map"}